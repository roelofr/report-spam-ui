# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  DOCKER_REGISTRY: ghcr.io
  DOCKER_IMAGE: ${{ github.repository }}

jobs:
  build:
    name: build (${{ matrix.node-name }})

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version:
          - lts/*
          - node

        include:
          - node-version: lts/*
            node-name: lts
            publish: true

          - node-version: node
            node-name: latest
            publish: false

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - run: npx playwright install

      - run: npm ci

      - run: npm run test:unit

      - run: npm run build

      - name: npx playwright test
        run: npx playwright test --reporter github

      - uses: actions/upload-artifact@v4
        if: matrix.publish == true
        with:
          name: app
          path: dist/

  package:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    needs:
      - build

    steps:
      - uses: docker/setup-buildx-action@v3

      - uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/download-artifact@v4
        with:
          name: app
          path: dist/

      - uses: docker/metadata-action@v5
        id: meta
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - uses: docker/build-push-action@v6
        id: push
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
        env:
          SOURCE_DATE_EPOCH: 0

      - uses: actions/attest-build-provenance@v1
        if: github.event_name != 'pull_request'
        with:
          subject-name: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
